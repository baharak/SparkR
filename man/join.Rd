% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/DataFrame.R
\docType{methods}
\name{join,DataFrame,DataFrame-method}
\alias{join,DataFrame,DataFrame-method}
\title{Join}
\usage{
\S4method{join}{DataFrame,DataFrame}(x, y, joinExpr = NULL, joinType = NULL)
}
\arguments{
\item{x}{A Spark DataFrame}

\item{y}{A Spark DataFrame}

\item{joinExpr}{(Optional) The expression used to perform the join. joinExpr must be a
Column expression. If joinExpr is omitted, join() wil perform a Cartesian join}

\item{joinType}{The type of join to perform. The following join types are available:
'inner', 'outer', 'left_outer', 'right_outer', 'semijoin'. The default joinType is "inner".}
}
\value{
A DataFrame containing the result of the join operation.
}
\description{
Join two DataFrames based on the given join expression.
}
\examples{
\dontrun{
sc <- sparkR.init()
sqlContext <- sparkRSQL.init(sc)
df1 <- jsonFile(sqlContext, path)
df2 <- jsonFile(sqlContext, path2)
join(df1, df2) # Performs a Cartesian
join(df1, df2, df1$col1 == df2$col2) # Performs an inner join based on expression
join(df1, df2, df1$col1 == df2$col2, "right_outer")
}
}

