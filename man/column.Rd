% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/column.R, R/generics.R
\docType{class}
\name{Column-class}
\alias{Column-class}
\alias{alias,Column-method}
\alias{approxCountDistinct}
\alias{approxCountDistinct,Column-method}
\alias{asc}
\alias{avg}
\alias{cast}
\alias{cast,Column-method}
\alias{cbrt}
\alias{contains}
\alias{count}
\alias{countDistinct}
\alias{countDistinct,Column-method}
\alias{desc}
\alias{endsWith}
\alias{getField}
\alias{getItem}
\alias{hypot}
\alias{isNotNull}
\alias{isNull}
\alias{last}
\alias{like}
\alias{lower}
\alias{n}
\alias{n,Column-method}
\alias{n_distinct}
\alias{n_distinct,Column-method}
\alias{rint}
\alias{rlike}
\alias{startsWith}
\alias{substr,Column-method}
\alias{sumDistinct}
\alias{toDegrees}
\alias{toRadians}
\alias{upper}
\title{S4 class that represents a DataFrame column}
\usage{
\S4method{alias}{Column}(object, data)

\S4method{substr}{Column}(x, start, stop)

\S4method{cast}{Column}(x, dataType)

\S4method{approxCountDistinct}{Column}(x, rsd = 0.95)

\S4method{countDistinct}{Column}(x, ...)

\S4method{n_distinct}{Column}(x, ...)

\S4method{n}{Column}(x)

approxCountDistinct(x, ...)

asc(x)

avg(x, ...)

cast(x, dataType)

cbrt(x)

contains(x, ...)

countDistinct(x, ...)

desc(x)

endsWith(x, ...)

getField(x, ...)

getItem(x, ...)

hypot(y, x)

isNull(x)

isNotNull(x)

last(x)

like(x, ...)

lower(x)

n(x)

n_distinct(x, ...)

rint(x, ...)

rlike(x, ...)

startsWith(x, ...)

sumDistinct(x)

toDegrees(x)

toRadians(x)

upper(x)
}
\arguments{
\item{start}{starting position}

\item{stop}{ending position}

\item{jc}{reference to JVM DataFrame column}
}
\value{
the approximate number of distinct items in a group.

the number of distinct items in a group.
}
\description{
The column class supports unary, binary operations on DataFrame columns

Set a new name for a column

An expression that returns a substring.

Casts the column to a different data type.

Approx Count Distinct

Count Distinct
}
\examples{
\dontrun{
  cast(df$age, "string")
  cast(df$name, list(type="array", elementType="byte", containsNull = TRUE))
}
}

